My steps to get this up and running so far.
------------------------------------------
make the isCardIDInList and getCardFromListByCardID work by using a binary search.
Might need to make sure that t the list is in order.


Make for tina a deck to teach her the difference between a letter's name and it's sound.
	The cards should ask "what is th name of this letter: s" and "what sound does this letter make: s"

--done-- To load reading cards
--done-- Scan through the database
--done-- Caclulate if a card needs to be reviewed
--done-- add to reviews array list
--done-- add new cards to learning array list
--done-- 
--done-- Make the app actually load flashcards properly
--done-- 	// How the layout will be used.
--done-- 	The program will look through the flashcard database line by line.
--done-- 	The flashcards are grouped in lessons, but we will not necessarily load just from one lesson. We load flashcards that are next needing a review.
--done-- 	The lesson grouping of the flashcards is more to handle the user's current reading level.
--done-- 	If they are up to a certain level, they will know all the words before, so we can easily see how large their vocabulary is.
--done-- 
--done-- 	Flashcards are loaded as if all the reading lessons and cards are of a single deck, so they're reviewed in the order that they need to be reviewed in, and not separated by file or group.
--done-- 
--done-- ----------------------
--done-- The rules for loading reading lesson cards.
--done-- 
--done-- ca and ac should be intimately linked and reviewed together.
--done-- 
--done-- words should probably be shown before a sentence?
--done-- 
--done-- all cards should be loaded in the order they're added to the deck.
--done-- 
--done-- reading and spelling cards
--done-- 	After going through the below, I think keep reading and spelling sererate, but when first introduced to a word, we should practice
--done-- 	reading and spelling, as it draws more focus to the word.
--done-- 	Further reviews can seperate reading and spelling.
--done-- 	If we had reading and spelling intimately linked, then we'd only ever know the review times between the spelling, as it's obvious that spelling is harder to get right more often than reading.
--done-- 
--done-- 
--done-- 
--done-- 	do we link them together
--done-- 	or is reading a different thing from spelling?
--done-- 
--done-- 	I think we should learn them seperately.
--done-- 	like, I can read mississipii, but fuck knows how to spell it.
--done-- 
--done-- 
--done-- 	* Pros for linking cards together
--done-- 		They'll have to read and spell both, resulting in more reviews.
--done-- 		If they forget how to spell a word, maybe they also can't read it?
--done-- 		They can practice both spelling and reading together, to really get the word into their head.
--done-- 
--done-- 	* Cons for not linking cards together
--done-- 		not practicing reading and writing together.
--done-- 
--done-- 
--done-- 	* Cons for linking cards together
--done-- 		Could force too many reviews, especially if she fails to spell a card, but has no problems reading it.
--done-- 		Leads to unknown data on whether she can read a card, as she's probably going to fail at spelling more often than reading.
--done-- 
--done-- 	* Pros for not linking cards together
--done-- 		Keeps reading and spelling study data seperate, so we can see how large the reading review intervals are.
--done-- 		Reading and spelling are 2 different things.
--done-- -------------------------------------


Make a database media checker:
	This will be used after creating a reading lesson database file, it'll highlight missing images and audio files.

	I also need to add a way to check if the 'click to hear the word' feature on sentence mode to see if it can find all the audio files.
		The android code should be using the same sentence analyzer as the lesson generator, so it should link to the correct files.

	Allow font changes and capitalise and lower case the word/sentence, because if a card shows as 'll', is it 2 L or 2 I letters or even LI or IL?

Make sure that when learning the consonant vowel pairs, the two flashcards are seen together on the first try.



- done - Add a statistics tracker to tina's app.
- done - 	the database coumns should be
- done - 		primary key
- done - 		date in millis
- done - 		card_id( id of the card studied )
- done - 		the card's boxnum before answering
- done - 		time it took to answer
- done - 		did she get it right/wrong
- done - 		did she need the spelling hint?


I think we should add a sound teaching mode. E.g. cat will say "cat. c. a. t. cat. ca. at. cat. ca. at. cat." and highlight each letter as it's being said.
This will mean a lot more work for every sound.

Record videos for pronouncing each sound that is tricky, and explaining how to teach someone this sound. E.g. 'TH' makes the same saound as an 'F', but it is not pronounced the same. TH is said using the tip of the tongue touching teeth. F is said by your top teeth touching the bottom lip. TH also has a second sound which is pronounced as thuh as in "thuh man was sitting down". We add a vibrating V sound to the TH.
	So the video will show:
		How to pronounce the sound
		All the different sounds the letter pairs can have
		How to say the different sounds too.


say out loud "cat. c. a. t. cat.", showing it spelt on the screen, highlighting letters as it's said, and then they can try to answer again after it's been hidden.
	Will need to splice several audio files together cat.wav c.wav a.wav t.wav cat.wav.
Also make a say it out loud bit for sounds
	Say: "H E makes the sound :HEH
	h.wav + e.wav + makes_the_sound.wav + he.wav
	also highlight the letters as it's spoken.

Download some FOSS pictures for tina's bdpq lessons, and any other deck that has copywritten images, so I can release them for the public.

Find that list of letter pairs that I made years ago, where I went through the whole dictionary to find each different sound each letter pair can make.

Add a daily card count on the main menu screen.
	Have a total count for each deck, displayed like anki, with new cards and reviews.
	Have a total count underneath each deck.
	Remember that tina has to study each deck x times as that's the only way to learn more than 3 cards. e.g. she learns 3 cards, then loads the deck again to load 3 more, and that's her daily limit reached.

Add a speaking alarm that says "Tina, do your reading practice". It should go off twice a day.










Look at anki's review algorithm, and see if I can mimic a similar forgetting curve.
	Chart out my app's forgetting curve.
	It's currently multiplying the box number by 1.4, starting at 1, and the number is rounded to get the number of days for the last review.
	1    * 1.4 = 1.4
	1.4  * 1.4 = 1.96
	1.96 * 1.4 = etc....
	
	Anki's review interval is 2.5 where mine is 1.4
	
	Anki's interval in days is
	1 2
	2 5
	3 13
	4 33
	5 83
	
	Tina's app interval in days is
	
	Interval
	1  1
	2  1.4
	3  2
	4  3
	5  4
	6  6
	7  8
	8  11
	9  15
	10 21
